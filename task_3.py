# -*- coding: utf-8 -*-
"""Task_3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1imMxQgjpsbryxFxcBSp9CoptyEhK6u21
"""

# 1. Import Libraries and Dataset
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

from google.colab import files
uploaded = files.upload()

df = pd.read_csv('Housing.csv')
print(df.head())

#preprocessing data # Check for missing values
print(df.isnull().sum())

# Encode categorical variables (Yes/No columns)
df_encoded = df.copy()
yes_no_cols = ['mainroad', 'guestroom', 'basement', 'hotwaterheating', 'airconditioning', 'prefarea']
df_encoded[yes_no_cols] = df_encoded[yes_no_cols].apply(lambda x: x.map({'yes': 1, 'no': 0}))

# One-hot encode 'furnishingstatus'
df_encoded = pd.get_dummies(df_encoded, columns=['furnishingstatus'], drop_first=True)

# Final columns
print(df_encoded.columns)

# 2. split the data (train/test) #Define independent (X) and dependent (y) variables
X = df_encoded.drop('price', axis=1)
y = df_encoded['price']

# Split the dataset
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

print("Train size:", X_train.shape)
print("Test size:", X_test.shape)

# 4. linear regression #Create and train the model
lr_model = LinearRegression()
lr_model.fit(X_train, y_train)

# Predict on test data
y_pred = lr_model.predict(X_test)

# Evaluting the model #Mean Absolute Error
mae = mean_absolute_error(y_test, y_pred)

# Mean Squared Error
mse = mean_squared_error(y_test, y_pred)

# R-squared Score
r2 = r2_score(y_test, y_pred)

print(f"MAE: {mae}")
print(f"MSE: {mse}")
print(f"RÂ² Score: {r2}")

#5.plot regression line # Simple Linear Regression with one feature for visualization
plt.figure(figsize=(8, 6))
sns.regplot(x=X_test['area'], y=y_test, line_kws={"color":"red"})
plt.title("Linear Regression: Area vs Price")
plt.xlabel("Area (sq ft)")
plt.ylabel("Price")
plt.show()

# Coefficients and intercept
coeff_df = pd.DataFrame(lr_model.coef_, X.columns, columns=['Coefficient'])
print("Intercept:", lr_model.intercept_)
print(coeff_df)